/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        int value;
        int carry = 0;
        ListNode dummy = new ListNode(-1);
        ListNode current = dummy;
        
        while (l1  != null || l2 != null) {
            int v1 = l1 != null ? l1.val : 0;
            int v2 = l2 != null ? l2.val : 0;          
            value = (v1 + v2 + carry ) % 10 ;
            carry = (v1 + v2 + carry) / 10;
            current.next = new ListNode(value);           
            current = current.next;
            if (l1 != null) l1 = l1.next;
            if (l2 != null) l2 = l2.next;
        }
        if (carry > 0) {
            current.next = new ListNode(carry);
        }
                
        return dummy.next;
    }
}
