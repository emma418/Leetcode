class Solution {
    public boolean isValidSudoku(char[][] board) {
        HashSet<Character> set = new HashSet<>();
        for(int i = 0; i < 9; i++) {
            set.clear();
            for(int j = 0; j < 9; j++) {
                if(board[i][j] == '.') {
                    continue;
                } else {
                    if (set.contains(board[i][j])) {
                        return false;
                    }
                    set.add(board[i][j]);
                }                
            }
            //if (set.size() == 0) return false;
        }
        for(int i = 0; i < 9; i++) {
            set.clear();
            for(int j = 0; j < 9; j++) {
                if(board[j][i] == '.') {
                    continue;
                } else {
                    if (set.contains(board[j][i])) {
                        return false;
                    }
                    set.add(board[j][i]);
                }                
            }
            //if (set.size() == 0) return false;
        }
        for(int i = 0; i < 9; i += 3) {
            for(int j = 0; j < 9; j += 3) {
                set.clear();
                for (int x=0; x < 3; x++) {
                    for (int y = 0; y < 3; y++) {
                       if(board[i + x][j + y] == '.') {
                            continue;
                        } else {
                            if (set.contains(board[i + x][j + y])) {
                            return false;
                            }
                            set.add(board[i + x][j + y]);                            
                        }
                    }                   
                }       
                //if (set.size() == 0) return false;
            }            
        }
        return true;

    }
}
